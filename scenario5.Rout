
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

Registered S3 methods overwritten by 'ggplot2':
  method         from 
  [.quosures     rlang
  c.quosures     rlang
  print.quosures rlang
[Previously saved workspace restored]

> # TLSL Scenario 5 --------------------------------------------------------------
> xfun::pkg_attach2(pkgs)
Loading required package: carData

Attaching package: ‘dplyr’

The following object is masked from ‘package:car’:

    recode

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: magrittr

Attaching package: ‘ape’

The following object is masked from ‘package:ggpubr’:

    rotate

> theme_set(theme_minimal())
> 
> s5_under_list <- list()
> s5_over_list <- list()
> set.seed(seed)
> 
> for (u in 1:nsims) {
+     tu <- t_per_indiv + 1
+     # x2
+     x2_df <- x2_spatial_builder(tu = tu)
+ 
+     comb <- data.frame()
+     for (n in 1:n_indiv) {
+         epsilon <- rnorm(tu, 0, 1)
+         x1 <- sample(x = c(0, 1), size = tu, replace = TRUE)
+         x2_temp <- subset(x2_df, i == n)$X2
+ 
+         y <- numeric(length(epsilon))
+         yinit <- rnorm(1, 0, 1)
+ 
+         for(l in 1:length(y)){
+             if(l==1) y[l] <- alpha + b1*x1[l] + theta_wz*x2_temp[l] + phi * yinit + epsilon[l]
+             if(l > 1) y[l] <- alpha + b1*x1[l] + theta_wz*x2_temp[l] + phi * y[l-1] + epsilon[l]
+         }
+         temp <- data.frame(id = n, t = 1:t_per_indiv, y = y[-1],
+                            x1 = x1[-1], x2 = x2_temp[-1],
+                            ytm1 = y[-length(y)])
+         comb <- rbind(comb, temp)
+     }
+     location_df <- location_builder_continuous(n_indiv = n_indiv,
+                                                t_per_indiv = t_per_indiv)
+     comb <- cbind(comb, location = location_df$location)
+ 
+     # Create global monadic spatial weight
+     sw <- spatialWeights::monadic_spatial_weights(
+                             comb, id_var = 'id', time_var = 't',
+                             y_var = 'y', location_var = 'location',
+                             weight_name = 'wy', mc_cores = num_cores)
+     sw$t <- as.integer(sw$t)
+     # Lag weight
+     sw <- sw %>% arrange(id, t) %>% group_by(id) %>%
+                 mutate(lag_wy = dplyr::lag(wy, order_by = id))
+ 
+     sw <- merge(sw, comb)
+ 
+     # burn in
+     sw <- subset(sw, t != 1:burnin)
+ 
+     # Estimate models
+     s5_under <- lm(y ~ x1 + lag_wy, data = sw)
+ 
+     s5_over <- lm(y ~ x1 + x2 + ytm1 + lag_wy, data = sw)
+ 
+     # Save estimates
+     s5_under_list <- results_combiner(s5_under_list, s5_under)
+     s5_over_list <- results_combiner(s5_over_list, s5_over)
+ }
Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

Note: p-value of Moran's I is only found when mc_cores = 1.

Continuous location variable detected. Proximity found using method = euclidean.

> 
> # Find the root mean squared error for DGP variable coefficients
> s5_under_list[['rmse']] <- rmse(s5_under_list, c('x1'), 'b1', b1)
> s5_over_list[['rmse']] <- rmse(s5_over_list, c('x1', 'x2', 'ytm1'),
+                             c('b1', 'theta_wz', 'phi'), c(b1, theta_wz, phi))
> 
> # Save simulations -------------------------------------------------------------
> save(s5_over_list, s5_under_list, file = 'mc_results/scenario5.rda')
> 
> proc.time()
   user  system elapsed 
 55.164  16.144  57.102 
