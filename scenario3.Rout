
R version 3.3.3 (2017-03-06) -- "Another Canoe"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin16.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> # TLSL Scenario 3 --------------------------------------------------------------
> simpleSetup::library_install(pkgs)

Attaching package: ‘dplyr’

The following object is masked from ‘package:car’:

    recode

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union


Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine

> theme_set(theme_bw())
> 
> s3_under_list <- list()
> s3_over_list <- list()
> s3_under_location_list <- list()
> 
> for (u in 1:nsims) {
+     set.seed(u)
+ 
+     x1 <- sample(x = c(0, 1), size = N, replace = TRUE)
+ 
+     location <- sample(regions, n_indiv, replace = TRUE)
+     W <- as.matrix(dist(location, method = 'binary'))
+     diag(W) <- 0
+     x2_df <- data.frame()
+     G <- vector()
+     for (k in 1:t_per_indiv) {
+         g <- runif(n = obs_per_time, min = 0, max = 10)
+         X2 <- c(G, (W %*% g) + rnorm(obs_per_time, 0, 1))
+         temp <- data.frame(i = 1:n_indiv, t = k, X2 = X2, location = location)
+         x2_df <- rbind(x2_df, temp)
+     }
+     x2_df <- x2_df[order(x2_df$i, x2_df$t), ]
+ 
+     epsilon <- rnorm(N, 0, 1)
+ 
+     # Generate response
+     y <- alpha + b1*x1 + b2*x2_df$X2 + epsilon
+ 
+     # Create global monadic spatial weight
+     comb <- data.frame(id = i, t = t, y = y,
+                        x1 = x1, x2 = x2_df$X2,
+                        location = as.factor(x2_df$location))
+     sw <- spatialWeights::monadic_spatial_weights(
+                             comb, id_var = 'id', time_var = 't',
+                             y_var = 'y', location_var = 'location',
+                             weight_name = 'wy',
+                             mc_cores = num_cores)
+     # Lag weight
+     sw <- sw %>% arrange(id, t) %>% group_by(id) %>%
+                 mutate(lag_wy = dplyr::lag(wy, order_by = id))
+ 
+    sw <- merge(sw, comb)
+ 
+     # Estimate models
+     s3_under <- lm(y ~ x1 + lag_wy, data = sw)
+     s3_over <- lm(y ~ x1 + x2 + lag_wy, data = sw)
+ 
+     sw$location <- as.factor(sw$location)
+     s3_location <- lm(y ~ x1 + location, data = sw)
+ 
+     # Save estimates
+     s3_under_list <- results_combiner(s3_under_list, s3_under)
+     s3_over_list <- results_combiner(s3_over_list, s3_over)
+     s3_under_location_list <- results_combiner(s3_under_location_list, s3_location)
+ }
Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

Note: p-value of Moran's I is only found when mc_cores = 1.

Categorical location detected.
Proximity found using Xi == Xk and group averaging.

